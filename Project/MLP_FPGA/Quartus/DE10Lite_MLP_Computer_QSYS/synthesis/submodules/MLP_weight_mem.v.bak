module MLP_weight_mem #(
    parameter ADDR_WIDTH = 6,      // log2(number of perceptrons)
    parameter DATA_WIDTH = 32      // Width of each weight (e.g., fixed-point)
)(
    input  wire clk,
    input  wire rst,

    // Write interface
    input  wire [ADDR_WIDTH-1:0] rd_addr,
    output wire [DATA_WIDTH-1:0] rd_data,

    input  wire wr_en,
    input  wire [ADDR_WIDTH-1:0] wr_addr,
    input  wire [DATA_WIDTH-1:0] wr_data
);

    // Memory declaration with M9K block usage
    (* ramstyle = "M9K" *) 
    reg [DATA_WIDTH-1:0] mem [0:(1 << ADDR_WIDTH)-1];

    always @(posedge clk) begin
        if (rst) begin
            // Optional reset behavior (typically no init for BRAM)

        end else if (wr_en) begin
            mem[wr_addr] <= wr_data;
        end
    end

endmodule
assign rd_data = mem[rd_addr];
